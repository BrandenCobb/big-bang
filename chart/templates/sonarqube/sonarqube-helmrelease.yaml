{{- if .Values.addons.sonarqube.enabled }}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarqube
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/component: "core"
    {{- include "commonLabels" . | nindent 4}}

spec:
  releaseName: sonarqube
  targetNamespace: sonarqube
  chart:
    spec:
      chart: {{ .Values.addons.sonarqube.git.path }}
      interval: 5m
      sourceRef:
        kind: GitRepository
        name: sonarqube
        namespace: {{ .Release.Namespace }}

  {{- with .Values.flux }}
  interval: {{ .interval }}
  test:
    enable: false
  install:
    remediation:
      retries: {{ .install.retries }}
  upgrade:
    remediation:
      retries: {{ .upgrade.retries }}
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: {{ .rollback.timeout }}
    cleanupOnFail: {{ .rollback.cleanupOnFail }}
  {{- end }}
  
  valuesFrom:
    - name: values
      kind: Secret
      valuesKey: "sonarqube.yaml"

  values:
    hostname: {{ .Values.hostname }}
    istio:
      enabled: {{ .Values.istio.enabled }}
    monitoring:
      enabled: {{ .Values.monitoring.enabled }}
    {{- if ( include "imagePullSecret" . ) }}
    ## value for image pull secret
    image:
      pullSecret: private-registry
    {{- end }}
    # SAML SSO config
    {{- if .Values.addons.sonarqube.sso.enabled }}
    sonarProperties:
      sonar.auth.saml.enabled: {{ .Values.addons.sonarqube.sso.enabled }}
      sonar.core.serverBaseURL: https://sonarqube.{{ .Values.hostname }}
      sonar.auth.saml.applicationId: {{ .Values.addons.sonarqube.sso.client_id }}
      sonar.auth.saml.providerName: {{ .Values.addons.sonarqube.sso.providerName }}
      sonar.auth.saml.providerId: https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}
      sonar.auth.saml.loginUrl: https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/saml
      sonar.auth.saml.certificate.secured: {{ .Values.addons.sonarqube.sso.certificate }}
      sonar.auth.saml.user.login: {{ .Values.addons.sonarqube.sso.login }}
      sonar.auth.saml.user.name: {{ .Values.addons.sonarqube.sso.name }}
      sonar.auth.saml.user.email: {{ .Values.addons.sonarqube.sso.email }}
      {{- if .Values.addons.sonarqube.sso.group }}
      sonar.auth.saml.user.group: {{ .Values.addons.sonarqube.sso.group }}
      {{- end }}
    {{- end }}
    # External Postgres config
    {{- if .Values.addons.sonarqube.database.enabled }}
    postgresql:
      # Set to false for external postgres server
      enabled: {{ not .Values.addons.sonarqube.database.enabled  }}
      postgresqlServer: {{ .Values.addons.sonarqube.database.server }}
      postgresqlDatabase: {{ .Values.addons.sonarqube.database.database }}
      postgresqlUsername: {{ .Values.addons.sonarqube.database.user }}
      existingSecret: sonarqube-db-secret
      service:
        port: {{ .Values.addons.sonarqube.database.port }}
    {{- end }}
  {{- if or .Values.gatekeeper.enabled .Values.istio.enabled .Values.monitoring.enabled }}
  dependsOn:
  {{- if .Values.gatekeeper.enabled }}
    - name: gatekeeper
      namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- if .Values.istio.enabled }}
    - name: istio
      namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- if .Values.monitoring.enabled }}
    - name: monitoring
      namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- end }}
{{- end }}
