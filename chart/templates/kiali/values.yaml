{{- if .Values.kiali.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.kiali "name" "kiali" "defaults" (include "bigbang.defaults.kiali" .)) }}
{{- end }}

{{- define "bigbang.defaults.kiali" -}}
hostname: {{ .Values.hostname }}

openshift: {{ .Values.openshift}}

istio:
  enabled: {{ .Values.istio.enabled }}
  kiali:
    gateways:
    - istio-system/{{ default "public" .Values.kiali.ingress.gateway }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}
elasticsearch:
  enabled: {{ .Values.logging.enabled }}
cr:
  spec:
    server:
      web_port: "443"
    auth:
      {{- if .Values.kiali.sso.enabled }}
      strategy: openid
      openid:
        client_id: "{{ .Values.kiali.sso.client_id }}"
        disable_rbac: true
        issuer_uri: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}"
        scopes:
        - openid
        - email
        username_claim: email
      {{- else }}
      strategy: token
      {{- end }}
    external_services:
      grafana:
        {{- $grafanaUrls := first (dig "istio" "grafana" "hosts" list .Values.monitoring.values) }}
        url: {{ tpl ($grafanaUrls | default (printf "%s.%s" "grafana" .Values.hostname)) . | quote }}
      tracing:
        {{- $tracingUrls := first (dig "istio" "jaeger" "hosts" list .Values.jaeger.values) }}
        url: {{ tpl ($tracingUrls | default (printf "%s.%s" "tracing" .Values.hostname)) . | quote }}
    api:
      namespaces:
        # bigbang watches all!
        exclude: []
networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  ingressLabels:
    {{- $gateway := default "public" .Values.kiali.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.istio) | nindent 4 }}
{{- end -}}
