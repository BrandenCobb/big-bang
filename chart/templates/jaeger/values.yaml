{{- if .Values.jaeger.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.jaeger "name" "jaeger" "defaults" (include "bigbang.defaults.jaeger" .)) }}
{{- end }}

{{- define "bigbang.defaults.jaeger" -}}
imagePullSecrets:
  - name: private-registry
hostname: {{ .Values.hostname }}
istio:
  enabled: {{ .Values.istio.enabled }}
  jaeger:
    gateways:
    - istio-system/{{ default "public" .Values.jaeger.ingress.gateway }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}
elasticsearch:
  enabled: {{ .Values.logging.enabled }}
jaeger:
  spec:
    allInOne:
      labels:
        protect: keycloak
    query:
      labels:
        protect: keycloak
networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  ingressLabels:
    {{- $gateway := (default "public" .Values.jaeger.ingress.gateway) }}
    app: {{ (get .Values.istio.gateways $gateway).ingressGateway }}
    istio: null
{{- end -}}