{{- if .Values.addons.gitlab.enabled }}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gitlab
  namespace: {{ .Release.Namespace }}
spec:
  releaseName: gitlab
  targetNamespace: gitlab
  chart:
    spec:
      chart: {{ .Values.addons.gitlab.git.path }}
      interval: 5m
      sourceRef:
        kind: GitRepository
        name: gitlab
        namespace: {{ .Release.Namespace }}

{{- with .Values.flux }}
  interval: {{ .interval }}
  test:
    enable: false
  install:
    remediation:
      retries: {{ .install.retries }}
  upgrade:
    remediation:
      retries: {{ .upgrade.retries }}
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: {{ .rollback.timeout }}
    cleanupOnFail: {{ .rollback.cleanupOnFail }}
  {{- end }}

  valuesFrom:
    - name: values
      kind: Secret
      valuesKey: "gitlab.yaml"

  values:
    hostname: {{ .Values.hostname }}
    istio:
      enabled: {{ .Values.istio.enabled }}
    monitoring:
      enabled: {{ .Values.monitoring.enabled }}
    {{- if .Values.addons.gitlab.database.external }}
    postgresql:
      install: false
    {{- end }}
    {{- if ( include "imagePullSecret" . ) }}
    ## values for image pull secrets
    redis:
      metrics:
        image:
          pullSecrets: 
          - private-registry
      image:
        pullSecrets: 
        - private-registry
    {{- end }}
    registry:
      {{- if .Values.addons.gitlab.objectstorage.external }}
      storage:
        secret: gitlab-object-storage
        key: {{ .Values.addons.gitlab.objectstorage.registry.connection.key }}
      {{- end }}
    {{- if ( include "imagePullSecret" . ) }}
      image:
        pullSecrets:
        - name: private-registry
    shared-secrets:
      selfsign:
        image:
          pullSecrets:
          - name: private-registry
    {{- end }}
    gitlab:
      task-runner:
        {{- if .Values.addons.gitlab.objectstorage.external }}
        backups:
          objectStorage:
            config:
              secret: gitlab-object-storage
              key: {{ .Values.addons.gitlab.objectstorage.backups.connection.key }}
        {{- end }}
    {{- if ( include "imagePullSecret" . ) }}
        image:
          pullSecrets:
          - name: private-registry
      migrations:
        image:
          pullSecrets:
          - name: private-registry
      webservice:
        image:
          pullSecrets:
          - name: private-registry 
        workhorse:
          pullSecrets:
          - name: private-registry 
      sidekiq:
        image:
          pullSecrets:
          - name: private-registry
      gitaly:
        image:
          pullSecrets:
          - name: private-registry
      gitlab-shell:
        image:
          pullSecrets:
          - name: private-registry
      gitlab-exporter:
        image:
          pullSecrets:
          - name: private-registry
    minio:
      pullSecrets:
      - name: private-registry
    {{- end }}
    global:
      {{- if .Values.addons.gitlab.objectstorage.external }}
      minio:
        enabled: false
      {{- end }}
      {{- if .Values.addons.gitlab.database.external }}
      psql:
        host: {{ .Values.addons.gitlab.database.host }}
        port: {{ .Values.addons.gitlab.database.port }}
        username: {{ .Values.addons.gitlab.database.username }}
        database: {{ .Values.addons.gitlab.database.database }}
        password:
          secret: gitlab-database
          key: PGPASSWORD
      {{- end }}
      {{- if .Values.addons.gitlab.objectstorage.external }}
      registry: 
        bucket: {{ .Values.addons.gitlab.objectstorage.registry.buckets.bucket }}
      {{- end }}
      {{- if or .Values.addons.gitlab.sso.enabled .Values.addons.gitlab.objectstorage.external }}
      appConfig:
      {{- end }}
        {{- if .Values.addons.gitlab.sso.enabled }}
        omniauth:
          enabled: {{ .Values.addons.gitlab.sso.enabled }}
          autoSignInWithProvider: {{ .Values.addons.gitlab.sso.autoSignInWithProvider }}
          syncProfileFromProvider: {{ .Values.addons.gitlab.sso.syncProfileFromProvider }}
          syncProfileAttributes: {{ .Values.addons.gitlab.sso.syncProfileAttributes }}
          allowSingleSignOn: {{ .Values.addons.gitlab.sso.allowSingleSignOn }}
          blockAutoCreatedUsers: {{ .Values.addons.gitlab.sso.blockAutoCreatedUsers }}
          autoLinkLdapUser: {{ .Values.addons.gitlab.sso.autoLinkLdapUser }}
          autoLinkSamlUser: {{ .Values.addons.gitlab.sso.autoLinkSamlUser }}
          autoLinkUser: {{ .Values.addons.gitlab.sso.autoLinkUser }}
          externalProviders: {{ .Values.addons.gitlab.sso.externalProviders }}
          allowBypassTwoFactor: {{ .Values.addons.gitlab.sso.allowBypassTwoFactor }}
          providers:
              - secret: gitlab-sso-provider
                key: gitlab-sso.json
        {{- end }}
        {{- if .Values.addons.gitlab.objectstorage.external }}
        lfs:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.lfs }}
          connection:
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        artifacts:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.artifacts }}
          connection:
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        uploads:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.uploads }}
          connection:
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        packages:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.packages }}
          connection:
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        externalDiffs:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.externalDiffs }}
          connection:
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        terraformState:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.terraformState }}
          connection:
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        dependencyProxy:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.dependencyProxy }}
          connection: 
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        pseudonymizer:
          bucket: {{ .Values.addons.gitlab.objectstorage.rails.buckets.pseudonymizer }}
          connection:
            secret: gitlab-object-storage
            key: {{ .Values.addons.gitlab.objectstorage.rails.connection.key }}
        backups:
          bucket: {{ .Values.addons.gitlab.objectstorage.backups.buckets.bucket }}
          tmpBucket: {{ .Values.addons.gitlab.objectstorage.backups.buckets.tmpBucket }}
        {{- end }}
      hosts:
        domain: code.{{ .Values.hostname }}
        gitlab:
          name: code.{{ .Values.hostname }}
        registry:
          name: registry.{{ .Values.hostname }}
      {{- if ( include "imagePullSecret" . ) }}
      ## values for image pull secrets
      certificates:
        image:
          pullSecrets:
          - name: private-registry
      kubectl:
        image:
          pullSecrets:
          - name: private-registry
      {{ end }}

  {{- if or .Values.gatekeeper.enabled .Values.istio.enabled .Values.monitoring.enabled }}
  dependsOn:
  {{- if .Values.gatekeeper.enabled }}
  - name: gatekeeper
    namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- if .Values.istio.enabled }}
  - name: istio
    namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- if .Values.monitoring.enabled }}
  - name: monitoring
    namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- end }}
{{- end }}