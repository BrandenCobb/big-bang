{{- if .Values.addons.nexus.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.addons.nexus "name" "nexus-repository-manager" "defaults" (include "bigbang.defaults.nexus-repository-manager" .)) }}
{{- end }}

{{- define "bigbang.defaults.nexus-repository-manager" -}}
{{- $domainName := default .Values.domain .Values.hostname }}
domain: {{ $domainName }}
hostname: nexus
istio:
  enabled: {{ .Values.istio.enabled }}
  nexus:
    gateways:
    - istio-system/{{ default "public" .Values.addons.nexus.ingress.gateway }}

openshift: {{ .Values.openshift }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  ingressLabels:
    {{- $gateway := default "public" .Values.addons.nexus.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.istio) | nindent 4 }}

nexus:
  imagePullSecrets:
    - name: private-registry

license_key: "{{ .Values.addons.nexus.license_key }}"

{{- if .Values.addons.nexus.sso.enabled }}
sso:
  enabled: {{ .Values.addons.nexus.sso.enabled }}
  idp_data:
    entityId: "https://nexus.{{ $domainName }}/service/rest/v1/security/saml/metadata"
    usernameAttribute: "{{ .Values.addons.nexus.sso.idp_data.username }}"
    firstNameAttribute: "{{ .Values.addons.nexus.sso.idp_data.firstName }}"
    lastNameAttribute: "{{ .Values.addons.nexus.sso.idp_data.lastName }}"
    emailAttribute: "{{ .Values.addons.nexus.sso.idp_data.email }}"
    groupsAttribute: "{{ .Values.addons.nexus.sso.idp_data.groups }}"
    validateResponseSignature: "true"
    validateAssertionSignature: "true"
    idpMetadata: '{{ .Values.addons.nexus.sso.idp_data.idpMetadata }}'
  realm:
    - "NexusAuthenticatingRealm"
    - "NexusAuthorizingRealm"
    - "SamlRealm"
  role: 
    {{- range .Values.addons.nexus.sso.role }}
    - id: {{ .id | quote }}
      name: {{ .name | quote }}
      description: {{ .description | quote }}
      privileges: 
        {{- range .privileges }}
        - {{ . | quote }}
        {{- else }} []
        {{- end }}
      roles: 
        {{- range .roles }}
        - {{ . | quote }}
        {{- else }} []
        {{- end }}
    {{- end }}
{{- end }}

{{- if .Values.addons.nexus.repository.enabled }}
repository:
	enabled: {{ .Values.addons.nexus.repository.enabled }}
	repo:
    {{- range .Values.addons.nexus.repository.repo }}
    - name: {{- .name | quote }}
      format: {{- .format | quote }}
      type: {{- .type | quote }}
      repo_data: 
        name: {{- .repo_data.name | quote }}
        online: {{- .repo_data.online | quote }}
        storage:
          blobStoreName: {{- .repo_data.storage.blobStoreName | quote }}
          strictContentTypeValidation: {{- .repo_data.storage.strictContentTypeValidation | quote }}
          writePolicy: {{- .repo_data.storage.writePolicy | quote }}
        cleanup: 
          policyNames: 
            {{- range .repo_data.cleanup.policyNames }}
            - {{ . | quote }}
            {{- else }} []
            {{- end }}
        component:
          proprietaryComponents: {{- .repo_data.component.proprietaryComponents | quote }}
        raw: 
          contentDisposition: {{- .repo_data.raw.contentDisposition | quote }}
    {{- end }}
{{- end }}
{{- end -}}