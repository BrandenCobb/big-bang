apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configs.config.gatekeeper.sh
  labels:
    gatekeeper.sh/system: "yes"
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
spec:
  group: config.gatekeeper.sh
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Namespaced
  validation:
    openAPIV3Schema:
      type: object
      description: Config is the Schema for the configs API
      properties:
        apiVersion:
          type: string
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        kind:
          type: string
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        metadata:
          type: object
        spec:
          type: object
          description: ConfigSpec defines the desired state of Config
          properties:
            match:
              type: array
              description: Configuration for namespace exclusion
              items:
                type: object
                properties:
                  excludedNamespaces:
                    type: array
                    items:
                      type: string
                  processes:
                    type: array
                    items:
                      type: string
            readiness:
              type: object
              description: Configuration for readiness tracker
              properties:
                statsEnabled:
                  type: boolean
            sync:
              type: object
              description: Configuration for syncing k8s objects
              properties:
                syncOnly:
                  type: array
                  description: If non-empty, only entries on this list will be replicated
                    into OPA
                  items:
                    type: object
                    properties:
                      kind:
                        type: string
                      group:
                        type: string
                      version:
                        type: string
            validation:
              type: object
              description: Configuration for validation
              properties:
                traces:
                  type: array
                  description: List of requests to trace. Both "user" and "kinds"
                    must be specified
                  items:
                    type: object
                    properties:
                      kind:
                        type: object
                        description: Only trace requests of the following GroupVersionKind
                        properties:
                          kind:
                            type: string
                          group:
                            type: string
                          version:
                            type: string
                      dump:
                        type: string
                        description: Also dump the state of OPA with the trace. Set
                          to `All` to dump everything.
                      user:
                        type: string
                        description: Only trace requests from the specified user
        status:
          type: object
          description: ConfigStatus defines the observed state of Config
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: constraintpodstatuses.status.gatekeeper.sh
  labels:
    gatekeeper.sh/system: "yes"
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: status.gatekeeper.sh
  names:
    kind: ConstraintPodStatus
    listKind: ConstraintPodStatusList
    plural: constraintpodstatuses
    singular: constraintpodstatus
  scope: Namespaced
  validation:
    openAPIV3Schema:
      type: object
      description: ConstraintPodStatus is the Schema for the constraintpodstatuses
        API
      properties:
        apiVersion:
          type: string
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        kind:
          type: string
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        metadata:
          type: object
        status:
          type: object
          description: ConstraintPodStatusStatus defines the observed state of ConstraintPodStatus
          properties:
            constraintUID:
              type: string
              description: Storing the constraint UID allows us to detect drift, such
                as when a constraint has been recreated after its CRD was deleted
                out from under it, interrupting the watch
            enforced:
              type: boolean
            errors:
              type: array
              items:
                type: object
                description: Error represents a single error caught while adding a
                  constraint to OPA
                properties:
                  code:
                    type: string
                  location:
                    type: string
                  message:
                    type: string
                required:
                - code
                - message
            id:
              type: string
            observedGeneration:
              type: integer
              format: int64
            operations:
              type: array
              items:
                type: string
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: constrainttemplatepodstatuses.status.gatekeeper.sh
  labels:
    gatekeeper.sh/system: "yes"
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: status.gatekeeper.sh
  names:
    kind: ConstraintTemplatePodStatus
    listKind: ConstraintTemplatePodStatusList
    plural: constrainttemplatepodstatuses
    singular: constrainttemplatepodstatus
  scope: Namespaced
  validation:
    openAPIV3Schema:
      type: object
      description: ConstraintTemplatePodStatus is the Schema for the constrainttemplatepodstatuses
        API
      properties:
        apiVersion:
          type: string
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        kind:
          type: string
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        metadata:
          type: object
        status:
          type: object
          description: ConstraintTemplatePodStatusStatus defines the observed state
            of ConstraintTemplatePodStatus
          properties:
            errors:
              type: array
              items:
                type: object
                description: CreateCRDError represents a single error caught during
                  parsing, compiling, etc.
                properties:
                  code:
                    type: string
                  location:
                    type: string
                  message:
                    type: string
                required:
                - code
                - message
            id:
              type: string
              description: 'Important: Run "make" to regenerate code after modifying
                this file'
            observedGeneration:
              type: integer
              format: int64
            operations:
              type: array
              items:
                type: string
            templateUID:
              type: string
              description: UID is a type that holds unique ID values, including UUIDs.  Because
                we don't ONLY use UUIDs, this is an alias to string.  Being a type
                captures intent and helps make sure that UIDs and names do not get
                conflated.
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: constrainttemplates.templates.gatekeeper.sh
  labels:
    controller-tools.k8s.io: "1.0"
    gatekeeper.sh/system: "yes"
  creationTimestamp: null
spec:
  group: templates.gatekeeper.sh
  names:
    kind: ConstraintTemplate
    plural: constrainttemplates
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        kind:
          type: string
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        metadata:
          type: object
        spec:
          type: object
          properties:
            crd:
              type: object
              properties:
                spec:
                  type: object
                  properties:
                    names:
                      type: object
                      properties:
                        kind:
                          type: string
                        shortNames:
                          type: array
                          items:
                            type: string
                    validation:
                      type: object
            targets:
              type: array
              items:
                type: object
                properties:
                  libs:
                    type: array
                    items:
                      type: string
                  rego:
                    type: string
                  target:
                    type: string
        status:
          type: object
          properties:
            byPod:
              type: array
              items:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        location:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                  id:
                    type: string
                    description: a unique identifier for the pod that wrote the status
                  observedGeneration:
                    type: integer
                    format: int64
            created:
              type: boolean
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gatekeeper-admin
  namespace: gatekeeper-system
  labels:
    gatekeeper.sh/system: "yes"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gatekeeper-manager-role
  namespace: gatekeeper-system
  labels:
    gatekeeper.sh/system: "yes"
  creationTimestamp: null
rules:
- resources:
  - events
  apiGroups:
  - ""
  verbs:
  - create
  - patch
- resources:
  - secrets
  apiGroups:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gatekeeper-manager-role
  labels:
    gatekeeper.sh/system: "yes"
  creationTimestamp: null
rules:
- resources:
  - '*'
  apiGroups:
  - '*'
  verbs:
  - get
  - list
  - watch
- resources:
  - customresourcedefinitions
  apiGroups:
  - apiextensions.k8s.io
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - configs
  apiGroups:
  - config.gatekeeper.sh
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - configs/status
  apiGroups:
  - config.gatekeeper.sh
  verbs:
  - get
  - patch
  - update
- resources:
  - '*'
  apiGroups:
  - constraints.gatekeeper.sh
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - podsecuritypolicies
  apiGroups:
  - policy
  verbs:
  - use
- resources:
  - '*'
  apiGroups:
  - status.gatekeeper.sh
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - constrainttemplates
  apiGroups:
  - templates.gatekeeper.sh
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- resources:
  - constrainttemplates/finalizers
  apiGroups:
  - templates.gatekeeper.sh
  verbs:
  - delete
  - get
  - patch
  - update
- resources:
  - constrainttemplates/status
  apiGroups:
  - templates.gatekeeper.sh
  verbs:
  - get
  - patch
  - update
- resources:
  - validatingwebhookconfigurations
  apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - gatekeeper-validating-webhook-configuration
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gatekeeper-manager-rolebinding
  namespace: gatekeeper-system
  labels:
    gatekeeper.sh/system: "yes"
roleRef:
  name: gatekeeper-manager-role
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: gatekeeper-admin
  namespace: gatekeeper-system
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gatekeeper-manager-rolebinding
  labels:
    gatekeeper.sh/system: "yes"
roleRef:
  name: gatekeeper-manager-role
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: gatekeeper-admin
  namespace: gatekeeper-system
  kind: ServiceAccount
---
apiVersion: v1
kind: Secret
metadata:
  name: gatekeeper-webhook-server-cert
  namespace: gatekeeper-system
  labels:
    gatekeeper.sh/system: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: gatekeeper-webhook-service
  namespace: gatekeeper-system
  labels:
    gatekeeper.sh/system: "yes"
spec:
  selector:
    control-plane: controller-manager
    gatekeeper.sh/operation: webhook
    gatekeeper.sh/system: "yes"
  ports:
  - port: 443
    targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-audit
  namespace: gatekeeper-system
  labels:
    control-plane: controller-manager
    gatekeeper.sh/operation: audit
    gatekeeper.sh/system: "yes"
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: audit-controller
      gatekeeper.sh/operation: audit
      gatekeeper.sh/system: "yes"
  template:
    metadata:
      labels:
        control-plane: audit-controller
        gatekeeper.sh/operation: audit
        gatekeeper.sh/system: "yes"
      annotations:
        container.seccomp.security.alpha.kubernetes.io/manager: runtime/default
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: gatekeeper-admin
      nodeSelector:
        kubernetes.io/os: linux
      containers:
      - name: manager
        image: openpolicyagent/gatekeeper:v3.1.1
        command:
        - /manager
        args:
        - --operation=audit
        - --operation=status
        - --logtostderr
        ports:
        - name: metrics
          protocol: TCP
          containerPort: 8888
        - name: healthz
          protocol: TCP
          containerPort: 9090
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        livenessProbe:
          httpGet:
            port: 9090
            path: /healthz
        readinessProbe:
          httpGet:
            port: 9090
            path: /readyz
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 999
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-controller-manager
  namespace: gatekeeper-system
  labels:
    control-plane: controller-manager
    gatekeeper.sh/operation: webhook
    gatekeeper.sh/system: "yes"
spec:
  replicas: 3
  selector:
    matchLabels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
  template:
    metadata:
      labels:
        control-plane: controller-manager
        gatekeeper.sh/operation: webhook
        gatekeeper.sh/system: "yes"
      annotations:
        container.seccomp.security.alpha.kubernetes.io/manager: runtime/default
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: gatekeeper-admin
      nodeSelector:
        kubernetes.io/os: linux
      containers:
      - name: manager
        image: openpolicyagent/gatekeeper:v3.1.1
        command:
        - /manager
        args:
        - --port=8443
        - --logtostderr
        - --exempt-namespace=gatekeeper-system
        - --operation=webhook
        ports:
        - name: webhook-server
          protocol: TCP
          containerPort: 8443
        - name: metrics
          protocol: TCP
          containerPort: 8888
        - name: healthz
          protocol: TCP
          containerPort: 9090
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: cert
          readOnly: true
          mountPath: /certs
        livenessProbe:
          httpGet:
            port: 9090
            path: /healthz
        readinessProbe:
          httpGet:
            port: 9090
            path: /readyz
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 999
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: gatekeeper-webhook-server-cert
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: gatekeeper.sh/operation
                  operator: In
                  values:
                  - webhook
              topologyKey: kubernetes.io/hostname
            weight: 100
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: gatekeeper-validating-webhook-configuration
  labels:
    gatekeeper.sh/system: "yes"
  creationTimestamp: null
webhooks:
- name: validation.gatekeeper.sh
  clientConfig:
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admit
    caBundle: Cg==
  failurePolicy: Ignore
  namespaceSelector:
    matchExpressions:
    - key: admission.gatekeeper.sh/ignore
      operator: DoesNotExist
  rules:
  - resources:
    - '*'
    apiGroups:
    - '*'
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
  sideEffects: None
  timeoutSeconds: 5
- name: check-ignore-label.gatekeeper.sh
  clientConfig:
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admitlabel
    caBundle: Cg==
  failurePolicy: Fail
  rules:
  - resources:
    - namespaces
    apiGroups:
    - ""
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
  sideEffects: None
  timeoutSeconds: 5
