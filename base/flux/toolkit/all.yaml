# GitOps Toolkit revision latest
# Components: source-controller,kustomize-controller,helm-controller,notification-controller
apiVersion: v1
kind: Namespace
metadata:
  name: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-scraping
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
spec:
  ingress:
  - ports:
    - protocol: TCP
      port: 8080
    from:
    - namespaceSelector: {}
  podSelector: {}
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-webhooks
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
spec:
  ingress:
  - from:
    - namespaceSelector: {}
  podSelector:
    matchLabels:
      app: notification-controller
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-ingress
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
spec:
  ingress:
  - from:
    - podSelector: {}
  podSelector: {}
  policyTypes:
  - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: crd-controller-flux-system
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
rules:
- resources:
  - '*'
  apiGroups:
  - source.toolkit.fluxcd.io
  verbs:
  - '*'
- resources:
  - '*'
  apiGroups:
  - kustomize.toolkit.fluxcd.io
  verbs:
  - '*'
- resources:
  - '*'
  apiGroups:
  - helm.toolkit.fluxcd.io
  verbs:
  - '*'
- resources:
  - '*'
  apiGroups:
  - notification.toolkit.fluxcd.io
  verbs:
  - '*'
- resources:
  - configmaps
  - configmaps/status
  apiGroups:
  - ""
  verbs:
  - '*'
- resources:
  - events
  apiGroups:
  - ""
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: crd-controller-flux-system
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
roleRef:
  name: crd-controller-flux-system
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: default
  namespace: flux-system
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-reconciler-flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
roleRef:
  name: cluster-admin
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: default
  namespace: flux-system
  kind: ServiceAccount
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: buckets.source.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .spec.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Bucket is the Schema for the buckets API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: BucketSpec defines the desired state of an S3 compatible
              bucket
            properties:
              secretRef:
                type: object
                description: The name of the secret containing authentication credentials
                  for the Bucket.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
              bucketName:
                type: string
                description: The bucket name.
              endpoint:
                type: string
                description: The bucket endpoint address.
              ignore:
                type: string
                description: Ignore overrides the set of excluded patterns in the
                  .sourceignore format (which is the same as .gitignore). If not provided,
                  a default will be used, consult the documentation for your version
                  to find out what those are.
              insecure:
                type: boolean
                description: Insecure allows connecting to a non-TLS S3 HTTP endpoint.
              interval:
                type: string
                description: The interval at which to check for bucket updates.
              provider:
                type: string
                description: The S3 compatible storage provider name, default ('generic').
                enum:
                - generic
                - aws
              region:
                type: string
                description: The bucket region.
              timeout:
                type: string
                description: The timeout for download operations, defaults to 20s.
            required:
            - bucketName
            - endpoint
            - interval
          status:
            type: object
            description: BucketStatus defines the observed state of a bucket
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  Bucket sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the Bucket.
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the artifact output of the
                  last Bucket sync.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: gitrepositories.source.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    singular: gitrepository
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .spec.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: GitRepository is the Schema for the gitrepositories API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: GitRepositorySpec defines the desired state of a Git repository.
            properties:
              secretRef:
                type: object
                description: The secret name containing the Git credentials. For HTTPS
                  repositories the secret must contain username and password fields.
                  For SSH repositories the secret must contain identity, identity.pub
                  and known_hosts fields.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
              ignore:
                type: string
                description: Ignore overrides the set of excluded patterns in the
                  .sourceignore format (which is the same as .gitignore). If not provided,
                  a default will be used, consult the documentation for your version
                  to find out what those are.
              interval:
                type: string
                description: The interval at which to check for repository updates.
              ref:
                type: object
                description: The Git reference to checkout and monitor for changes,
                  defaults to master branch.
                properties:
                  branch:
                    type: string
                    description: The Git branch to checkout, defaults to master.
                  commit:
                    type: string
                    description: The Git commit SHA to checkout, if specified Tag
                      filters will be ignored.
                  semver:
                    type: string
                    description: The Git tag semver expression, takes precedence over
                      Tag.
                  tag:
                    type: string
                    description: The Git tag to checkout, takes precedence over Branch.
              timeout:
                type: string
                description: The timeout for remote Git operations like cloning, defaults
                  to 20s.
              url:
                type: string
                description: The repository URL, can be a HTTP/S or SSH address.
                pattern: ^(http|https|ssh)://
              verify:
                type: object
                description: Verify OpenPGP signature for the Git commit HEAD points
                  to.
                properties:
                  secretRef:
                    type: object
                    description: The secret name containing the public keys of all
                      trusted Git authors.
                    properties:
                      name:
                        type: string
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                  mode:
                    type: string
                    description: Mode describes what git object should be verified,
                      currently ('head').
                    enum:
                    - head
                required:
                - mode
            required:
            - interval
            - url
          status:
            type: object
            description: GitRepositoryStatus defines the observed state of a Git repository.
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  repository sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the GitRepository.
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the artifact output of the
                  last repository sync.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: helmcharts.source.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmChart
    listKind: HelmChartList
    plural: helmcharts
    singular: helmchart
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Chart
      type: string
      jsonPath: .spec.chart
    - name: Version
      type: string
      jsonPath: .spec.version
    - name: Source Kind
      type: string
      jsonPath: .spec.sourceRef.kind
    - name: Source Name
      type: string
      jsonPath: .spec.sourceRef.name
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: HelmChart is the Schema for the helmcharts API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: HelmChartSpec defines the desired state of a Helm chart.
            properties:
              chart:
                type: string
                description: The name or path the Helm chart is available at in the
                  SourceRef.
              interval:
                type: string
                description: The interval at which to check the Source for updates.
              sourceRef:
                type: object
                description: The reference to the Source the chart is available at.
                properties:
                  name:
                    type: string
                    description: Name of the referent.
                  apiVersion:
                    type: string
                    description: APIVersion of the referent.
                  kind:
                    type: string
                    description: Kind of the referent, valid values are ('HelmRepository',
                      'GitRepository', 'Bucket').
                    enum:
                    - HelmRepository
                    - GitRepository
                    - Bucket
                required:
                - kind
                - name
              valuesFile:
                type: string
                description: Alternative values file to use as the default chart values,
                  expected to be a relative path in the SourceRef. Ignored when omitted.
              version:
                type: string
                description: The chart version semver expression, ignored for charts
                  from GitRepository and Bucket sources. Defaults to latest when omitted.
            required:
            - chart
            - interval
            - sourceRef
          status:
            type: object
            description: HelmChartStatus defines the observed state of the HelmChart.
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  chart sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the HelmChart.
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the last chart pulled.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: helmrepositories.source.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmRepository
    listKind: HelmRepositoryList
    plural: helmrepositories
    singular: helmrepository
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .spec.url
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: HelmRepository is the Schema for the helmrepositories API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: HelmRepositorySpec defines the reference to a Helm repository.
            properties:
              secretRef:
                type: object
                description: The name of the secret containing authentication credentials
                  for the Helm repository. For HTTP/S basic auth the secret must contain
                  username and password fields. For TLS the secret must contain a
                  certFile and keyFile, and/or caCert fields.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
              interval:
                type: string
                description: The interval at which to check the upstream for updates.
              timeout:
                type: string
                description: The timeout of index downloading, defaults to 60s.
              url:
                type: string
                description: The Helm repository URL, a valid URL contains at least
                  a protocol and host.
            required:
            - interval
            - url
          status:
            type: object
            description: HelmRepositoryStatus defines the observed state of the HelmRepository.
            properties:
              artifact:
                type: object
                description: Artifact represents the output of the last successful
                  repository sync.
                properties:
                  revision:
                    type: string
                    description: Revision is a human readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm index timestamp, a Helm chart version, etc.
                  checksum:
                    type: string
                    description: Checksum is the SHA1 checksum of the artifact.
                  lastUpdateTime:
                    type: string
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of this artifact.
                    format: date-time
                  path:
                    type: string
                    description: Path is the relative file path of this artifact.
                  url:
                    type: string
                    description: URL is the HTTP address of this artifact.
                required:
                - path
                - url
              conditions:
                type: array
                description: Conditions holds the conditions for the HelmRepository.
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              url:
                type: string
                description: URL is the download link for the last index fetched.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Service
metadata:
  name: source-controller
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
    control-plane: controller
spec:
  type: ClusterIP
  selector:
    app: source-controller
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: source-controller
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
    control-plane: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: source-controller
  template:
    metadata:
      labels:
        app: source-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
      - name: manager
        image: ghcr.io/fluxcd/source-controller:v0.2.1
        args:
        - --events-addr=http://notification-controller/
        - --watch-all-namespaces=true
        - --log-level=info
        - --log-json
        - --enable-leader-election
        - --storage-path=/data
        ports:
        - name: http
          containerPort: 9090
        - name: http-prom
          containerPort: 8080
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: data
          mountPath: /data
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            port: http
            path: /
        readinessProbe:
          httpGet:
            port: http
            path: /
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: data
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kustomizations.kustomize.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: kustomize.toolkit.fluxcd.io
  names:
    kind: Kustomization
    listKind: KustomizationList
    plural: kustomizations
    shortNames:
    - ks
    singular: kustomization
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Kustomization is the Schema for the kustomizations API.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: KustomizationSpec defines the desired state of a kustomization.
            properties:
              serviceAccount:
                type: object
                description: The Kubernetes service account used for applying the
                  kustomization.
                properties:
                  name:
                    type: string
                    description: Name is the name of the service account being referenced.
                  namespace:
                    type: string
                    description: Namespace is the namespace of the service account
                      being referenced.
                required:
                - name
                - namespace
              decryption:
                type: object
                description: Decrypt Kubernetes secrets before applying them on the
                  cluster.
                properties:
                  secretRef:
                    type: object
                    description: The secret name containing the private OpenPGP keys
                      used for decryption.
                    properties:
                      name:
                        type: string
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                  provider:
                    type: string
                    description: Provider is the name of the decryption engine.
                    enum:
                    - sops
                required:
                - provider
              dependsOn:
                type: array
                description: DependsOn may contain a dependency.CrossNamespaceDependencyReference
                  slice with references to Kustomization resources that must be ready
                  before this Kustomization can be reconciled.
                items:
                  type: object
                  description: CrossNamespaceDependencyReference holds the reference
                    to a dependency.
                  properties:
                    name:
                      type: string
                      description: Name holds the name reference of a dependency.
                    namespace:
                      type: string
                      description: Namespace holds the namespace reference of a dependency.
                  required:
                  - name
              healthChecks:
                type: array
                description: A list of resources to be included in the health assessment.
                items:
                  type: object
                  description: CrossNamespaceObjectReference contains enough information
                    to let you locate the typed referenced object at cluster level
                  properties:
                    name:
                      type: string
                      description: Name of the referent
                    namespace:
                      type: string
                      description: Namespace of the referent
                    apiVersion:
                      type: string
                      description: API version of the referent, defaults to 'apps/v1'
                    kind:
                      type: string
                      description: Kind of the referent
                  required:
                  - kind
                  - name
              interval:
                type: string
                description: The interval at which to reconcile the kustomization.
              kubeConfig:
                type: object
                description: The KubeConfig for reconciling the Kustomization on a
                  remote cluster.
                properties:
                  secretRef:
                    type: object
                    description: SecretRef holds the name to a secret that contains
                      a 'value' key with the kubeconfig file as the value. It must
                      be in the same namespace as the Kustomization. It is recommended
                      that the kubeconfig is self-contained, and the secret is regularly
                      updated if credentials such as a cloud-access-token expire.
                      Cloud specific `cmd-path` auth helpers will not function without
                      adding binaries and credentials to the Pod that is responsible
                      for reconciling the Kustomization.
                    properties:
                      name:
                        type: string
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
              path:
                type: string
                description: Path to the directory containing the kustomization file.
                pattern: ^\./
              prune:
                type: boolean
                description: Prune enables garbage collection.
              sourceRef:
                type: object
                description: Reference of the source where the kustomization file
                  is.
                properties:
                  name:
                    type: string
                    description: Name of the referent
                  namespace:
                    type: string
                    description: Namespace of the referent, defaults to the Kustomization
                      namespace
                  apiVersion:
                    type: string
                    description: API version of the referent
                  kind:
                    type: string
                    description: Kind of the referent
                    enum:
                    - GitRepository
                    - Bucket
                required:
                - kind
                - name
              suspend:
                type: boolean
                description: This flag tells the controller to suspend subsequent
                  kustomize executions, it does not apply to already started executions.
                  Defaults to false.
              targetNamespace:
                type: string
                description: TargetNamespace sets or overrides the namespace in the
                  kustomization.yaml file.
                maxLength: 63
                minLength: 1
              timeout:
                type: string
                description: Timeout for validation, apply and health checking operations.
                  Defaults to 'Interval' duration.
              validation:
                type: string
                description: Validate the Kubernetes objects before applying them
                  on the cluster. The validation strategy can be 'client' (local dry-run)
                  or 'server' (APIServer dry-run).
                enum:
                - client
                - server
            required:
            - interval
            - path
            - prune
            - sourceRef
          status:
            type: object
            description: KustomizationStatus defines the observed state of a kustomization.
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
              lastAppliedRevision:
                type: string
                description: The last successfully applied revision. The revision
                  format for Git sources is <branch|tag>/<commit-sha>.
              lastAttemptedRevision:
                type: string
                description: LastAttemptedRevision is the revision of the last reconciliation
                  attempt.
              lastHandledReconcileAt:
                type: string
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change can be detected.
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last reconciled generation.
                format: int64
              snapshot:
                type: object
                description: The last successfully applied revision metadata.
                properties:
                  checksum:
                    type: string
                    description: The manifests sha1 checksum.
                  entries:
                    type: array
                    description: A list of Kubernetes kinds grouped by namespace.
                    items:
                      type: object
                      description: Snapshot holds the metadata of namespaced Kubernetes
                        objects
                      properties:
                        namespace:
                          type: string
                          description: The namespace of this entry.
                        kinds:
                          type: object
                          additionalProperties:
                            type: string
                          description: The list of Kubernetes kinds.
                      required:
                      - kinds
                required:
                - checksum
                - entries
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kustomize-controller
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
    control-plane: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kustomize-controller
  template:
    metadata:
      labels:
        app: kustomize-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
      - name: manager
        image: ghcr.io/fluxcd/kustomize-controller:v0.2.0
        args:
        - --events-addr=http://notification-controller/
        - --watch-all-namespaces=true
        - --log-level=info
        - --log-json
        - --enable-leader-election
        ports:
        - name: http-prom
          containerPort: 8080
        - name: healthz
          protocol: TCP
          containerPort: 9440
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: temp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            port: healthz
            path: /healthz
        readinessProbe:
          httpGet:
            port: healthz
            path: /readyz
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: temp
        emptyDir: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: helmreleases.helm.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: helm.toolkit.fluxcd.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
    - hr
    singular: helmrelease
  scope: Namespaced
  versions:
  - name: v2beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: HelmRelease is the Schema for the helmreleases API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: HelmReleaseSpec defines the desired state of a Helm release.
            properties:
              chart:
                type: object
                description: Chart defines the template of the v1beta1.HelmChart that
                  should be created for this HelmRelease.
                properties:
                  spec:
                    type: object
                    description: Spec holds the template for the v1beta1.HelmChartSpec
                      for this HelmRelease.
                    properties:
                      chart:
                        type: string
                        description: The name or path the Helm chart is available
                          at in the SourceRef.
                      interval:
                        type: string
                        description: Interval at which to check the v1beta1.Source
                          for updates. Defaults to 'HelmReleaseSpec.Interval'.
                      sourceRef:
                        type: object
                        description: The name and namespace of the v1beta1.Source
                          the chart is available at.
                        properties:
                          name:
                            type: string
                            description: Name of the referent.
                            maxLength: 253
                            minLength: 1
                          namespace:
                            type: string
                            description: Namespace of the referent.
                            maxLength: 63
                            minLength: 1
                          apiVersion:
                            type: string
                            description: APIVersion of the referent.
                          kind:
                            type: string
                            description: Kind of the referent.
                            enum:
                            - HelmRepository
                            - GitRepository
                            - Bucket
                        required:
                        - name
                      valuesFile:
                        type: string
                        description: Alternative values file to use as the default
                          chart values, expected to be a relative path in the SourceRef.
                          Ignored when omitted.
                      version:
                        type: string
                        description: Version semver expression, ignored for charts
                          from v1beta1.GitRepository and v1beta1.Bucket sources. Defaults
                          to latest when omitted.
                    required:
                    - chart
                    - sourceRef
                required:
                - spec
              dependsOn:
                type: array
                description: DependsOn may contain a dependency.CrossNamespaceDependencyReference
                  slice with references to HelmRelease resources that must be ready
                  before this HelmRelease can be reconciled.
                items:
                  type: object
                  description: CrossNamespaceDependencyReference holds the reference
                    to a dependency.
                  properties:
                    name:
                      type: string
                      description: Name holds the name reference of a dependency.
                    namespace:
                      type: string
                      description: Namespace holds the namespace reference of a dependency.
                  required:
                  - name
              install:
                type: object
                description: Install holds the configuration for Helm install actions
                  for this HelmRelease.
                properties:
                  disableHooks:
                    type: boolean
                    description: DisableHooks prevents hooks from running during the
                      Helm install action.
                  disableOpenAPIValidation:
                    type: boolean
                    description: DisableOpenAPIValidation prevents the Helm install
                      action from validating rendered templates against the Kubernetes
                      OpenAPI Schema.
                  disableWait:
                    type: boolean
                    description: DisableWait disables the waiting for resources to
                      be ready after a Helm install has been performed.
                  remediation:
                    type: object
                    description: Remediation holds the remediation configuration for
                      when the Helm install action for the HelmRelease fails. The
                      default is to not perform any action.
                    properties:
                      ignoreTestFailures:
                        type: boolean
                        description: IgnoreTestFailures tells the controller to skip
                          remediation when the Helm tests are run after an install
                          action but fail. Defaults to 'Test.IgnoreFailures'.
                      remediateLastFailure:
                        type: boolean
                        description: RemediateLastFailure tells the controller to
                          remediate the last failure, when no retries remain. Defaults
                          to 'false'.
                      retries:
                        type: integer
                        description: Retries is the number of retries that should
                          be attempted on failures before bailing. Remediation, using
                          an uninstall, is performed between each attempt. Defaults
                          to '0', a negative integer equals to unlimited retries.
                  replace:
                    type: boolean
                    description: Replace tells the Helm install action to re-use the
                      'ReleaseName', but only if that name is a deleted release which
                      remains in the history.
                  skipCRDs:
                    type: boolean
                    description: SkipCRDs tells the Helm install action to not install
                      any CRDs. By default, CRDs are installed if not already present.
                  timeout:
                    type: string
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
              interval:
                type: string
                description: Interval at which to reconcile the Helm release.
              kubeConfig:
                type: object
                description: KubeConfig for reconciling the HelmRelease on a remote
                  cluster.
                properties:
                  secretRef:
                    type: object
                    description: SecretRef holds the name to a secret that contains
                      a 'value' key with the kubeconfig file as the value. It must
                      be in the same namespace as the HelmRelease. It is recommended
                      that the kubeconfig is self-contained, and the secret is regularly
                      updated if credentials such as a cloud-access-token expire.
                      Cloud specific `cmd-path` auth helpers will not function without
                      adding binaries and credentials to the Pod that is responsible
                      for reconciling the HelmRelease.
                    properties:
                      name:
                        type: string
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
              maxHistory:
                type: integer
                description: MaxHistory is the number of revisions saved by Helm for
                  this HelmRelease. Use '0' for an unlimited number of revisions;
                  defaults to '10'.
              releaseName:
                type: string
                description: ReleaseName used for the Helm release. Defaults to a
                  composition of '[TargetNamespace-]Name'.
                maxLength: 53
                minLength: 1
              rollback:
                type: object
                description: Rollback holds the configuration for Helm rollback actions
                  for this HelmRelease.
                properties:
                  cleanupOnFail:
                    type: boolean
                    description: CleanupOnFail allows deletion of new resources created
                      during the Helm rollback action when it fails.
                  disableHooks:
                    type: boolean
                    description: DisableHooks prevents hooks from running during the
                      Helm rollback action.
                  disableWait:
                    type: boolean
                    description: DisableWait disables the waiting for resources to
                      be ready after a Helm rollback has been performed.
                  force:
                    type: boolean
                    description: Force forces resource updates through a replacement
                      strategy.
                  recreate:
                    type: boolean
                    description: Recreate performs pod restarts for the resource if
                      applicable.
                  timeout:
                    type: string
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
              suspend:
                type: boolean
                description: Suspend tells the controller to suspend reconciliation
                  for this HelmRelease, it does not apply to already started reconciliations.
                  Defaults to false.
              targetNamespace:
                type: string
                description: TargetNamespace to target when performing operations
                  for the HelmRelease. Defaults to the namespace of the HelmRelease.
                maxLength: 63
                minLength: 1
              test:
                type: object
                description: Test holds the configuration for Helm test actions for
                  this HelmRelease.
                properties:
                  enable:
                    type: boolean
                    description: Enable enables Helm test actions for this HelmRelease
                      after an Helm install or upgrade action has been performed.
                  ignoreFailures:
                    type: boolean
                    description: IgnoreFailures tells the controller to skip remediation
                      when the Helm tests are run but fail. Can be overwritten for
                      tests run after install or upgrade actions in 'Install.IgnoreTestFailures'
                      and 'Upgrade.IgnoreTestFailures'.
                  timeout:
                    type: string
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation during the performance of a Helm test action. Defaults
                      to 'HelmReleaseSpec.Timeout'.
              timeout:
                type: string
                description: Timeout is the time to wait for any individual Kubernetes
                  operation (like Jobs for hooks) during the performance of a Helm
                  action. Defaults to '5m0s'.
              uninstall:
                type: object
                description: Uninstall holds the configuration for Helm uninstall
                  actions for this HelmRelease.
                properties:
                  disableHooks:
                    type: boolean
                    description: DisableHooks prevents hooks from running during the
                      Helm rollback action.
                  keepHistory:
                    type: boolean
                    description: KeepHistory tells Helm to remove all associated resources
                      and mark the release as deleted, but retain the release history.
                  timeout:
                    type: string
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm uninstall action. Defaults to 'HelmReleaseSpec.Timeout'.
              upgrade:
                type: object
                description: Upgrade holds the configuration for Helm upgrade actions
                  for this HelmRelease.
                properties:
                  cleanupOnFail:
                    type: boolean
                    description: CleanupOnFail allows deletion of new resources created
                      during the Helm upgrade action when it fails.
                  disableHooks:
                    type: boolean
                    description: DisableHooks prevents hooks from running during the
                      Helm upgrade action.
                  disableOpenAPIValidation:
                    type: boolean
                    description: DisableOpenAPIValidation prevents the Helm upgrade
                      action from validating rendered templates against the Kubernetes
                      OpenAPI Schema.
                  disableWait:
                    type: boolean
                    description: DisableWait disables the waiting for resources to
                      be ready after a Helm upgrade has been performed.
                  force:
                    type: boolean
                    description: Force forces resource updates through a replacement
                      strategy.
                  preserveValues:
                    type: boolean
                    description: PreserveValues will make Helm reuse the last release's
                      values and merge in overrides from 'Values'. Setting this flag
                      makes the HelmRelease non-declarative.
                  remediation:
                    type: object
                    description: Remediation holds the remediation configuration for
                      when the Helm upgrade action for the HelmRelease fails. The
                      default is to not perform any action.
                    properties:
                      strategy:
                        type: string
                        description: Strategy to use for failure remediation. Defaults
                          to 'rollback'.
                        enum:
                        - rollback
                        - uninstall
                      ignoreTestFailures:
                        type: boolean
                        description: IgnoreTestFailures tells the controller to skip
                          remediation when the Helm tests are run after an upgrade
                          action but fail. Defaults to 'Test.IgnoreFailures'.
                      remediateLastFailure:
                        type: boolean
                        description: RemediateLastFailure tells the controller to
                          remediate the last failure, when no retries remain. Defaults
                          to 'false' unless 'Retries' is greater than 0.
                      retries:
                        type: integer
                        description: Retries is the number of retries that should
                          be attempted on failures before bailing. Remediation, using
                          'Strategy', is performed between each attempt. Defaults
                          to '0', a negative integer equals to unlimited retries.
                  timeout:
                    type: string
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
              values:
                description: Values holds the values for this Helm release.
                x-kubernetes-preserve-unknown-fields: true
              valuesFrom:
                type: array
                description: ValuesFrom holds references to resources containing Helm
                  values for this HelmRelease, and information about how they should
                  be merged.
                items:
                  type: object
                  description: ValuesReference contains a reference to a resource
                    containing Helm values, and optionally the key they can be found
                    at.
                  properties:
                    name:
                      type: string
                      description: Name of the values referent. Should reside in the
                        same namespace as the referring resource.
                      maxLength: 253
                      minLength: 1
                    kind:
                      type: string
                      description: Kind of the values referent, valid values are ('Secret',
                        'ConfigMap').
                      enum:
                      - Secret
                      - ConfigMap
                    optional:
                      type: boolean
                      description: Optional marks this ValuesReference as optional.
                        When set, a not found error for the values reference is ignored,
                        but any ValuesKey, TargetPath or transient error will still
                        result in a reconciliation failure.
                    targetPath:
                      type: string
                      description: TargetPath is the YAML dot notation path the value
                        should be merged at. When set, the ValuesKey is expected to
                        be a single flat value. Defaults to 'None', which results
                        in the values getting merged at the root.
                    valuesKey:
                      type: string
                      description: ValuesKey is the data key where the values.yaml
                        or a specific value can be found at. Defaults to 'values.yaml'.
                  required:
                  - kind
                  - name
            required:
            - chart
            - interval
          status:
            type: object
            description: HelmReleaseStatus defines the observed state of a HelmRelease.
            properties:
              conditions:
                type: array
                description: Conditions holds the conditions for the HelmRelease.
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
              failures:
                type: integer
                description: Failures is the reconciliation failure count against
                  the latest desired state. It is reset after a successful reconciliation.
                format: int64
              helmChart:
                type: string
                description: HelmChart is the namespaced name of the HelmChart resource
                  created by the controller for the HelmRelease.
              installFailures:
                type: integer
                description: InstallFailures is the install failure count against
                  the latest desired state. It is reset after a successful reconciliation.
                format: int64
              lastAppliedRevision:
                type: string
                description: LastAppliedRevision is the revision of the last successfully
                  applied source.
              lastAttemptedRevision:
                type: string
                description: LastAttemptedRevision is the revision of the last reconciliation
                  attempt.
              lastAttemptedValuesChecksum:
                type: string
                description: LastAttemptedValuesChecksum is the SHA1 checksum of the
                  values of the last reconciliation attempt.
              lastHandledReconcileAt:
                type: string
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change can be detected.
              lastReleaseRevision:
                type: integer
                description: LastReleaseRevision is the revision of the last successful
                  Helm release.
              observedGeneration:
                type: integer
                description: ObservedGeneration is the last observed generation.
                format: int64
              upgradeFailures:
                type: integer
                description: UpgradeFailures is the upgrade failure count against
                  the latest desired state. It is reset after a successful reconciliation.
                format: int64
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-controller
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
    control-plane: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-controller
  template:
    metadata:
      labels:
        app: helm-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
      - name: manager
        image: ghcr.io/fluxcd/helm-controller:v0.2.0
        args:
        - --events-addr=http://notification-controller/
        - --watch-all-namespaces=true
        - --log-level=info
        - --log-json
        - --enable-leader-election
        ports:
        - name: http-prom
          containerPort: 8080
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: temp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            port: http-prom
            path: /metrics
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: temp
        emptyDir: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: alerts.notification.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: notification.toolkit.fluxcd.io
  names:
    kind: Alert
    listKind: AlertList
    plural: alerts
    singular: alert
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Alert is the Schema for the alerts API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: AlertSpec defines an alerting rule for events involving a
              list of objects
            properties:
              eventSeverity:
                type: string
                default: info
                description: Filter events based on severity, defaults to ('info').
                  If set to 'info' no events will be filtered.
                enum:
                - info
                - error
              eventSources:
                type: array
                description: Filter events based on the involved objects
                items:
                  type: object
                  description: CrossNamespaceObjectReference contains enough information
                    to let you locate the typed referenced object at cluster level
                  properties:
                    name:
                      type: string
                      description: Name of the referent
                      maxLength: 53
                      minLength: 1
                    namespace:
                      type: string
                      description: Namespace of the referent
                      maxLength: 53
                      minLength: 1
                    apiVersion:
                      type: string
                      description: API version of the referent
                    kind:
                      type: string
                      description: Kind of the referent
                      enum:
                      - Bucket
                      - GitRepository
                      - Kustomization
                      - HelmRelease
                      - HelmChart
                      - HelmRepository
                  required:
                  - name
              providerRef:
                type: object
                description: Send events using this provider
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
              suspend:
                type: boolean
                description: This flag tells the controller to suspend subsequent
                  events dispatching. Defaults to false.
            required:
            - eventSources
            - providerRef
          status:
            type: object
            description: AlertStatus defines the observed state of Alert
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: providers.notification.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: notification.toolkit.fluxcd.io
  names:
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Provider is the Schema for the providers API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: ProviderSpec defines the desired state of Provider
            properties:
              type:
                type: string
                description: Type of provider
                enum:
                - slack
                - discord
                - msteams
                - rocket
                - generic
                - github
                - gitlab
              secretRef:
                type: object
                description: Secret reference containing the provider webhook URL
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
              address:
                type: string
                description: HTTP/S webhook address of this provider
                pattern: ^(http|https)://
              channel:
                type: string
                description: Alert channel for this provider
              proxy:
                type: string
                description: HTTP/S address of the proxy
                pattern: ^(http|https)://
              username:
                type: string
                description: Bot username for this provider
            required:
            - type
          status:
            type: object
            description: ProviderStatus defines the observed state of Provider
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: receivers.notification.toolkit.fluxcd.io
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
spec:
  group: notification.toolkit.fluxcd.io
  names:
    kind: Receiver
    listKind: ReceiverList
    plural: receivers
    singular: receiver
  scope: Namespaced
  versions:
  - name: v1beta1
    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].status
    - name: Status
      type: string
      jsonPath: .status.conditions[?(@.type=="Ready")].message
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Receiver is the Schema for the receivers API
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: ReceiverSpec defines the desired state of Receiver
            properties:
              type:
                type: string
                description: Type of webhook sender, used to determine the validation
                  procedure and payload deserialization.
                enum:
                - generic
                - github
                - gitlab
                - bitbucket
                - harbor
              resources:
                type: array
                description: A list of resources to be notified about changes.
                items:
                  type: object
                  description: CrossNamespaceObjectReference contains enough information
                    to let you locate the typed referenced object at cluster level
                  properties:
                    name:
                      type: string
                      description: Name of the referent
                      maxLength: 53
                      minLength: 1
                    namespace:
                      type: string
                      description: Namespace of the referent
                      maxLength: 53
                      minLength: 1
                    apiVersion:
                      type: string
                      description: API version of the referent
                    kind:
                      type: string
                      description: Kind of the referent
                      enum:
                      - Bucket
                      - GitRepository
                      - Kustomization
                      - HelmRelease
                      - HelmChart
                      - HelmRepository
                  required:
                  - name
              secretRef:
                type: object
                description: Secret reference containing the token used to validate
                  the payload authenticity
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
              events:
                type: array
                description: A list of events to handle, e.g. 'push' for GitHub or
                  'Push Hook' for GitLab.
                items:
                  type: string
              suspend:
                type: boolean
                description: This flag tells the controller to suspend subsequent
                  events handling. Defaults to false.
            required:
            - resources
            - type
          status:
            type: object
            description: ReceiverStatus defines the observed state of Receiver
            properties:
              conditions:
                type: array
                items:
                  type: object
                  description: Condition contains condition information of a toolkit
                    resource.
                  properties:
                    type:
                      type: string
                      description: Type of the condition.
                    status:
                      type: string
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                    lastTransitionTime:
                      type: string
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                    message:
                      type: string
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                    reason:
                      type: string
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                  required:
                  - status
                  - type
              url:
                type: string
                description: Generated webhook URL in the format of '/hook/sha256sum(token+name+namespace)'.
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Service
metadata:
  name: notification-controller
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
    control-plane: controller
spec:
  type: ClusterIP
  selector:
    app: notification-controller
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-receiver
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
    control-plane: controller
spec:
  type: ClusterIP
  selector:
    app: notification-controller
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-controller
  namespace: flux-system
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: latest
    control-plane: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-controller
  template:
    metadata:
      labels:
        app: notification-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
      - name: manager
        image: ghcr.io/fluxcd/notification-controller:v0.2.0
        args:
        - --watch-all-namespaces=true
        - --log-level=info
        - --log-json
        - --enable-leader-election
        ports:
        - name: http
          containerPort: 9090
        - name: http-webhook
          containerPort: 9292
        - name: http-prom
          containerPort: 8080
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: temp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            port: http-prom
            path: /metrics
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: temp
        emptyDir: {}
