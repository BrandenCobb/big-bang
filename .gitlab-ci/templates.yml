include:
  # "Default" AWS Networking
  - local: '/.gitlab-ci/jobs/networking/aws/.gitlab-ci.yml'

  # Clusters in CI
  - local: '/.gitlab-ci/jobs/ci-cluster/.gitlab-ci.yml'

  # RKE2 Gitlab CI jobs
  - local: '/.gitlab-ci/jobs/rke2/.gitlab-ci.yml'

.terraformer:
  image:
    name: registry.dso.mil/platform-one/big-bang/pipeline-templates/pipeline-templates/terraform:0.13.5
    entrypoint:
      - /usr/bin/env
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  interruptible: false
  variables:
    TF_IN_AUTOMATION: "1"
    TF_VAR_ci_pipeline_url: $CI_PIPELINE_URL
  before_script:
    - echo "$TF_VAR_env"
    - cd ${CI_PROJECT_DIR}/${TF_ROOT}
    - terraform version
    - terraform init -input=false
    # Loop to retry terraform workspace creation due to issues locking terraform.state in s3
    - |
      set -e
      attempt_counter=0
      max_attempts=5
      until [ $(terraform workspace select $TF_VAR_env >/dev/null || terraform workspace new $TF_VAR_env >/dev/null; echo $?) -eq 0 ]; do
        if [ ${attempt_counter} -eq ${max_attempts} ];then
          echo "Error creating workspace"
          exit 1
        fi
        attempt_counter=$(($attempt_counter+1))
        sleep 5
      done
    - terraform validate

.terraform destroy workspace:
  after_script:
    - cd ${CI_PROJECT_DIR}/${TF_ROOT}
    - terraform workspace select default && terraform workspace delete "${TF_VAR_env}"
