include:
  # "Default" AWS Networking
  - local: '/.gitlab-ci/jobs/networking/aws/.gitlab-ci.yml'

  # K3D Gitlab CI job
  - local: '/.gitlab-ci/jobs/k3d/.gitlab-ci.yml'

  # RKE2 Gitlab CI jobs
  - local: '/.gitlab-ci/jobs/rke2/.gitlab-ci.yml'

  # Utility Gitlab CI jobs
  - local: '/.gitlab-ci/jobs/utility/.gitlab-ci.yml'

.terraformer:
  image:
    name: registry.dsop.io/platform-one/big-bang/pipeline-templates/pipeline-templates/terraform:0.13.5
    entrypoint:
      - /usr/bin/env
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  interruptible: false
  variables:
    TF_IN_AUTOMATION: "1"
    TF_VAR_env: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
  before_script:
    # Shorten the env name down to 15 characters
    - export TF_VAR_env=$(echo "${CI_COMMIT_REF_SLUG}"| cut -c 1-7)-$(echo "${CI_COMMIT_SHA}" | cut -c 1-7)
    - cd ${CI_PROJECT_DIR}/${TF_ROOT}
    - terraform version
    - terraform init -input=false
    - terraform workspace select $TF_VAR_env || terraform workspace new $TF_VAR_env
    - terraform validate
  
.terraformer_airgap:
  extends:
    - .terraformer
  variables: 
    TF_IN_AUTOMATION: "1"
    TF_VAR_env: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-airgap
  before_script:
    ## Shorten the env name down to 15 characters
    - export TF_VAR_env=$(echo "${CI_COMMIT_REF_SLUG}"| cut -c 1-7)-$(echo "${CI_COMMIT_SHA}" | cut -c 1-7)-airgap
    - cd ${TF_ROOT}
    - terraform version
    - terraform init -input=false
    - terraform workspace select $TF_VAR_env || terraform workspace new $TF_VAR_env
    - terraform validate

.terraform destroy workspace:
  after_script:
    - cd ${CI_PROJECT_DIR}/${TF_ROOT}
    - terraform workspace select default && terraform workspace delete "${TF_VAR_env}"

.bigbang:
  image: registry.dsop.io/platform-one/big-bang/pipeline-templates/pipeline-templates/k3d-builder:0.0.1
  after_script:
    - kubectl get all -A
    - kubectl get helmrelease -A

.package:
  image: registry.dsop.io/platform-one/big-bang/umbrella/synker:0.0.1
  before_script:
    # Set up auth
    - mkdir -p /root/.docker
    - echo $DOCKER_AUTH_CONFIG > /root/.docker/config.json
  script:
    - cp ./scripts/package/synker.yaml ./synker.yaml

    # Populate images list in synker config
    # NOTE: This is stupid and hacky, use yq or something better to do this
    - cat images.txt | sed -e 's/^/    - /' >> synker.yaml

    - synker pull -b=1

    # Tar up synker as well?
    - cp /usr/local/bin/synker synker.yaml /var/lib/registry/
    - tar -C /var/lib/registry -czvf $IMAGE_PKG .
    - tar -czvf $IMAGE_PKG /var/lib/registry

    # Package dependent repos
    - ./scripts/package/gits.sh
    - tar -czf $REPOS_PKG repos/

    # Prep release
    - mkdir -p release
    - mv $IMAGE_LIST $IMAGE_PKG $REPOS_PKG release/

    # Publish packages to s3 release
    - aws s3 sync --quiet release/ s3://${PKG_S3_BUCKET}/umbrella/${PKG_PATH}