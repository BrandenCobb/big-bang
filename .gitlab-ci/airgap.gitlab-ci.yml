.deploy_bigbang: &deploy_bigbang
  - for script in ./scripts/deploy/*.sh; do chmod +x $script && $script; done

.test_bigbang: &test_bigbang
  - for test in ./tests/bash/*.sh; do chmod +x $test && $test; done 

.terraformer_airgap:
  variables:
    TF_IN_AUTOMATION: "1"
    TF_VAR_env: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-airgap
  before_script:
    ## Shorten the env name down to 15 characters
    - export TF_VAR_env=$(echo "${CI_COMMIT_REF_SLUG}"| cut -c 1-7)-$(echo "${CI_COMMIT_SHA}" | cut -c 1-7)-airgap
    - cd ${TF_ROOT}
    - terraform version
    - terraform init -input=false
    - terraform workspace select $TF_VAR_env || terraform workspace new $TF_VAR_env
    - terraform validate
#-----------------------------------------------------------------------------------------------------------------------
# Infrastructure: Networking
#
airgap/network up:
  extends:
    - .infra fork
    - .network up
    - .terraformer_airgap
  stage: network up
  environment:
    name: review/aws-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-airgap
    auto_stop_in: 1 hour

airgap/network down:
  extends:
    - .infra cleanup
    - .network down
    - .terraformer_airgap
  stage: network down
  environment:
    name: review/aws-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-airgap
    action: stop
#-----------------------------------------------------------------------------------------------------------------------


#-----------------------------------------------------------------------------------------------------------------------
# Infrastructure: Utility

# Create Utility Instance on AWS
aws/airgap/utility up:
  extends:
    - .infra create
    - .utility up
    - .terraformer_airgap
  stage: airgap up
  needs:
    - job: fetch umbrella templates
      artifacts: true
    - job: airgap/network up

# Destroy Utility Instance on AWS
aws/airgap/utility down:
  extends:
    - .infra cleanup
    - .utility down
    - .terraformer_airgap
  stage: airgap down
#-----------------------------------------------------------------------------------------------------------------------


#-----------------------------------------------------------------------------------------------------------------------
# Infrastructure: RKE2
#
# Create RKE2 cluster on AWS
airgap/rke2/cluster up:
  stage: cluster up
  extends:
    - .infra create
    - .rke2 airgap up
    - .terraformer_airgap
  needs:
    - job: fetch umbrella templates
      artifacts: true
    - job: airgap/network up
    - job: aws/airgap/utility up

# Install BigBang on RKE2 cluster on AWS
airgap/rke2/bigbang up:
  stage: bigbang up
  extends:
    - .infra create
    - .bigbang
    - .terraformer_airgap
  #Temp: Until the utility server is functional. 
  allow_failure: true 
  needs:
    - job: fetch umbrella templates
      artifacts: true
    - job: airgap/rke2/cluster up
      artifacts: true
  before_script:
    - mkdir -p ~/.kube
    - cp ${CI_PROJECT_DIR}/rke2.yaml ~/.kube/config

    # Deploy a default storage class for aws
    - kubectl apply -f ${CI_PROJECT_DIR}/.gitlab-ci/jobs/rke2/dependencies/k8s-resources/aws/default-ebs-sc.yaml
  script:
    - *deploy_bigbang

# Run tests on BigBang on RKE2 cluster on AWS

airgap/rke2/bigbang test:
  stage: test
  extends:
    - .infra create
    - .bigbang
    - .terraformer_airgap
  #Temp: Until the utility server is functional. 
  allow_failure: true 
  needs:
    - job: fetch umbrella templates
      artifacts: true
    - job: airgap/rke2/cluster up
      artifacts: true
    - job: airgap/rke2/bigbang up
  before_script:
    - mkdir -p ~/.kube
    - cp ${CI_PROJECT_DIR}/rke2.yaml ~/.kube/config
  script:
    ## Move this yum install to the dockerfile for the builder
    ## putting it here now for a quick way to install dig
    - yum install bind-utils -y
    - chmod +x scripts/hosts.sh && ./scripts/hosts.sh
    - *test_bigbang

# Uninstall BigBang on RKE2 cluster on AWS
airgap/rke2/bigbang down:
  stage: bigbang down
  extends:
    - .infra cleanup
    - .bigbang
    - .terraformer_airgap
  needs:
    - job: fetch umbrella templates
      artifacts: true
    - job: airgap/rke2/cluster up
      artifacts: true
    - job: airgap/rke2/bigbang test
  before_script:
    - mkdir -p ~/.kube
    - cp ${CI_PROJECT_DIR}/rke2.yaml ~/.kube/config
  script:
    - helm un -n bigbang bigbang
    # TODO: Smarter wait
    - sleep 180

# Destroy RKE2 cluster on AWS
airgap/rke2/cluster down:
  stage: cluster down
  extends:
    - .infra cleanup
    - .rke2 airgap down
    - .terraformer_airgap
  needs:
    - job: fetch umbrella templates
      artifacts: true
    - job: airgap/rke2/bigbang down
#-----------------------------------------------------------------------------------------------------------------------