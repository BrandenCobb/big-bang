#include:
#  - project: 'platform-one/big-bang/pipeline-templates/umbrella-templates'
#    file: '/jobs/rke2/tf-cluster-up.yaml'
#    ref: rke2

.deploy_k3d: &deploy_k3d
  # Starting dnsmasq for cluster dns resolution
  - docker run -d -p 53:53/udp -p 53:53 janeczku/go-dnsmasq:release-1.0.7
  - echo "nameserver 127.0.0.1" >> /etc/resolv.conf

  # Standup cluster
  - k3d cluster create ${K3D_CLUSTER_NAME}  --k3s-server-arg "--disable=traefik" --k3s-server-arg "--disable=metrics-server" -p 80:80@loadbalancer -p 443:443@loadbalancer --wait --agents 1 --servers 1
  - while ! (kubectl get node | grep "agent" > /dev/null); do sleep 3; done
  - kubectl get nodes
  - k3d node list

.deploy_flux: &deploy_flux
  # Install Flux
  - which flux
  - flux --version
  - flux install 
  - kubectl get namespaces,pods,helmrelease,gitrepositories -A

.wait_for_healthy: &wait_for_healthy
  # Wait for healthy
  ## TODO: make this dynamicly include the helmreleases being created instead of hardcoding 
  - sleep 5
  - kubectl get namespaces,pods,helmrelease,kustomizations,gitrepositories -A
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang gatekeeper
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang istio-operator
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang istio
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang monitoring
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang eck-operator
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang ek
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang fluent-bit
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang twistlock
  - kubectl wait --for=condition=Ready --timeout 300s helmrelease -n bigbang cluster-auditor
  - kubectl wait --for=condition=Ready --timeout 30s kustomizations.kustomize.toolkit.fluxcd.io -n bigbang secrets

.do_some_quick_tests: &do_some_quick_tests
  # Place kubernetes package test here
  - echo "Package tests go here"
  - bash ./tests/virtualservices.sh
  - kubectl get helmrelease -A

.check_non_ironbank_images: &check_non_ironbank_images
  - echo "Showing images not from ironbank:"
  # Ignore rancher images since those are from k3d
  - kubectl get pods -A -o jsonpath="{..image}" | tr -s '[[:space:]]' '\n' | sort | uniq -c | grep -v "registry1" | grep -v "rancher"


stages:
  - fast feedback
  - networking
  - cluster up
  - clean

.k3d:
  tags:
    - bigbang
    - privileged
    - public
  image: registry.dsop.io/platform-one/private/big-bang/pipeline-templates/k3d-builder:b0b45793
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - *deploy_k3d 
    - *deploy_flux
  after_script:
    - *check_non_ironbank_images
    # Delete Cluster
    - k3d cluster delete ${K3D_CLUSTER_NAME}

#fresh install:
#  stage: fast feedback
#  extends: .k3d
#  variables:
#    K3D_CLUSTER_NAME: fresh-install
#  script:
#    - echo "Install Big Bang From Current Branch"
#    # Install Big Bang From Current Branch
#    - helm upgrade -i bigbang chart -n bigbang --create-namespace --set registryCredentials.username='robot$bigbang' --set registryCredentials.password=${REGISTRY1_PASSWORD}
#    - kubectl apply -f examples/complete/envs/dev/source-secrets.yaml
#    - *wait_for_healthy
#    - *do_some_quick_tests
#
#upgrade from master:
#  stage: fast feedback
#  extends: .k3d
#  variables:
#    K3D_CLUSTER_NAME: upgrade-from-master
#  script:
#    - echo "Install Big Bang From Master"
#    - git fetch
#    - git checkout ${CI_DEFAULT_BRANCH}
#    - helm upgrade -i bigbang chart -n bigbang --create-namespace --set registryCredentials.username='robot$bigbang' --set registryCredentials.password=${REGISTRY1_PASSWORD}
#    - kubectl apply -f examples/complete/envs/dev/source-secrets.yaml
#    - *wait_for_healthy
#    - *do_some_quick_tests
#
#    - echo "Upgrade Big Bang to Current Branch"
#    - git checkout ${CI_COMMIT_BRANCH}
#    - helm upgrade -i bigbang chart -n bigbang --create-namespace --set registryCredentials.username='robot$bigbang' --set registryCredentials.password=${REGISTRY1_PASSWORD}
#    - kubectl apply -f examples/complete/envs/dev/source-secrets.yaml
#    - *wait_for_healthy
#    - *do_some_quick_tests
#  only:
#    - merge_requests

create network:
  stage: networking
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  script:
    - echo "tmp"

.rke2 vars:
  variables:

#rke2 init:
#  extends:
#    - .rke2 vars
#    - .rke2 init
#  stage:
#
#rke2 up:
#  extends:
#    - .rke2 vars
#    - .rke2 up
#  stage: cluster up
#  when: manual
#
#rke2 down:
#  extends:
#    - .rke2 vars
#    - .rke2 down
#  stage: cleanup
#  when: manual

rke2:
  stage: cluster up
  variables:
    TF_VAR_cluster_name: "rke2-${CI_COMMIT_SHORT_SHA}"
    TF_VAR_vpc_id: "vpc-5f627a3b"
    TF_VAR_subnets: '["subnet-7cda1f35","subnet-8f2ad4e8","subnet-cd480894"]'
  trigger:
    include:
      - local: ".gitlab/rke2/rke2.yaml"
    strategy: depend

rke2:clean:
  stage: clean
  needs:
    - job: rke2:plan
      artifacts: true
      ref: rke2-pipeline
      project: platform-one/big-bang/umbrella
  script:
    - echo "waited"